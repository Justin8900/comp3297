openapi: 3.0.3
info:
  title: Unihaven API
  version: 1.0.0
  description: |2

    API for Unihaven project - a platform for HKU student accommodation management.

    ## Role-Based Access Control

    This API implements role-based access control through query parameters. For most endpoints, you must include a `role` query parameter with one of the following values:

    - `cedars_specialist`: For CEDARS staff members who manage accommodations and property owners
    - `hku_member`: For HKU students and staff who can search and book accommodations

    ### Required Role Parameter

    Most endpoints require the `role` parameter to be included in the request. For example:
    ```
    GET /accommodations/?role=hku_member
    POST /property-owners/?role=cedars_specialist
    ```

    ### Permission Rules:

    1. Viewing accommodations: Requires `role=hku_member` or `role=cedars_specialist`
    2. Creating/updating accommodations: Requires `role=cedars_specialist`
    3. Managing property owners: Requires `role=cedars_specialist`
    4. Creating reservations: Requires `role=hku_member`
    5. Confirming reservations: Requires `role=cedars_specialist`

    If you attempt to access an endpoint without the required role, you will receive a 403 Forbidden error with an appropriate error message.

    ## Features

    - CEDARS Specialists can manage accommodations, property owners, and handle reservations
    - HKU members can search accommodations, make reservations, and rate their stays
paths:
  /accommodations/:
    get:
      operationId: accommodations_list
      description: |-
        List all available accommodations.
        Only HKU members and CEDARS specialists can list accommodations.
      summary: Retrieve a list of accommodations
      parameters:
      - in: query
        name: address_contains
        schema:
          type: string
        description: Filter by address text
      - in: query
        name: available_now
        schema:
          type: boolean
        description: Filter currently available accommodations
      - in: query
        name: max_price
        schema:
          type: number
          format: double
        description: Filter by maximum price
      - in: query
        name: min_beds
        schema:
          type: integer
        description: Filter by minimum number of beds
      - in: query
        name: min_price
        schema:
          type: number
          format: double
        description: Filter by minimum price
      - in: query
        name: min_rating
        schema:
          type: number
          format: double
        description: Filter by minimum rating
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: owner_id
        schema:
          type: integer
        description: Filter by property owner ID
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'hku_member' or 'cedars_specialist')
        required: true
      - in: query
        name: specialist_id
        schema:
          type: integer
        description: Filter by CEDARS specialist ID
      - in: query
        name: type
        schema:
          type: string
        description: Filter by accommodation type
      tags:
      - accommodations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccommodationList'
          description: ''
    post:
      operationId: accommodations_create
      description: |-
        Create a new accommodation.
        Only CEDARS specialists can create accommodations.
      summary: Create a new accommodation
      parameters:
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'cedars_specialist')
        required: true
      tags:
      - accommodations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation'
          description: ''
  /accommodations/{id}/:
    get:
      operationId: accommodations_retrieve
      description: |-
        Retrieve an accommodation.
        Only HKU members and CEDARS specialists can retrieve accommodation details.
      summary: Retrieve an accommodation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this accommodation.
        required: true
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'hku_member' or 'cedars_specialist')
        required: true
      tags:
      - accommodations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation'
          description: ''
    put:
      operationId: accommodations_update
      description: |-
        Update an accommodation.
        Only CEDARS specialists can update accommodations.
      summary: Update an accommodation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this accommodation.
        required: true
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'cedars_specialist')
        required: true
      tags:
      - accommodations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation'
          description: ''
    patch:
      operationId: accommodations_partial_update
      description: |-
        ViewSet for managing accommodations.
        Provides CRUD operations and search functionality for Accommodation model.

        Features:
        - Filtering by type, price, rating, beds, bedrooms, availability
        - Geocoding of addresses
        - Distance-based search from HKU locations
        - Custom search endpoint
      summary: Partially update an accommodation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this accommodation.
        required: true
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'cedars_specialist')
        required: true
      tags:
      - accommodations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccommodationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccommodationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccommodationRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation'
          description: ''
    delete:
      operationId: accommodations_destroy
      description: |-
        Delete an accommodation.
        Only CEDARS specialists can delete accommodations.
      summary: Delete an accommodation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this accommodation.
        required: true
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'cedars_specialist')
        required: true
      tags:
      - accommodations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /accommodations/search/:
    get:
      operationId: accommodations_search_retrieve
      description: |-
        Custom search endpoint for accommodations with advanced filtering.
        Only HKU members can search for accommodations.
      summary: Search for accommodations
      parameters:
      - in: query
        name: available_from
        schema:
          type: string
        description: Filter by availability start date (YYYY-MM-DD)
      - in: query
        name: available_until
        schema:
          type: string
        description: Filter by availability end date (YYYY-MM-DD)
      - in: query
        name: bedrooms
        schema:
          type: integer
        description: Filter by exact number of bedrooms
      - in: query
        name: beds
        schema:
          type: integer
        description: Filter by exact number of beds
      - in: query
        name: distance_from
        schema:
          type: string
        description: Calculate distances from specified HKU location or address
      - in: query
        name: max_price
        schema:
          type: number
          format: double
        description: Filter by maximum price
      - in: query
        name: min_bedrooms
        schema:
          type: integer
        description: Filter by minimum number of bedrooms
      - in: query
        name: min_beds
        schema:
          type: integer
        description: Filter by minimum number of beds
      - in: query
        name: min_rating
        schema:
          type: number
          format: double
        description: Filter by minimum rating
      - in: query
        name: rating
        schema:
          type: number
          format: double
        description: Filter by exact rating
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'hku_member' or 'cedars_specialist')
        required: true
      - in: query
        name: type
        schema:
          type: string
        description: Filter by accommodation type
      tags:
      - accommodations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation'
          description: ''
  /cedars-specialists/:
    get:
      operationId: cedars_specialists_list
      description: |-
        List CEDARS specialists.
        Only CEDARS specialists can list all specialists.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - cedars-specialists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCEDARSSpecialistList'
          description: ''
    post:
      operationId: cedars_specialists_create
      description: |-
        Create a new CEDARS specialist.
        Only CEDARS specialists can create new specialists.
      tags:
      - cedars-specialists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CEDARSSpecialistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CEDARSSpecialistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CEDARSSpecialistRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CEDARSSpecialist'
          description: ''
  /cedars-specialists/{id}/:
    get:
      operationId: cedars_specialists_retrieve
      description: |-
        Retrieve a CEDARS specialist.
        Only CEDARS specialists can retrieve specialist details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CEDARSSpecialist'
          description: ''
    put:
      operationId: cedars_specialists_update
      description: |-
        Update a CEDARS specialist.
        Only CEDARS specialists can update specialist details.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CEDARSSpecialistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CEDARSSpecialistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CEDARSSpecialistRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CEDARSSpecialist'
          description: ''
    patch:
      operationId: cedars_specialists_partial_update
      description: |-
        ViewSet for managing CEDARS specialists.
        Provides CRUD operations for CEDARSSpecialist model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCEDARSSpecialistRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCEDARSSpecialistRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCEDARSSpecialistRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CEDARSSpecialist'
          description: ''
    delete:
      operationId: cedars_specialists_destroy
      description: |-
        Delete a CEDARS specialist.
        Only CEDARS specialists can delete specialists.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /cedars-specialists/{id}/add_accommodation/:
    get:
      operationId: cedars_specialists_add_accommodation_retrieve
      description: |-
        Add a new accommodation managed by this specialist.

        Args:
            request: The HTTP request containing accommodation data
            pk: The primary key of the CEDARS specialist

        Returns:
            Response: The created accommodation or error message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation'
          description: ''
    post:
      operationId: cedars_specialists_add_accommodation_create
      description: |-
        Add a new accommodation managed by this specialist.

        Args:
            request: The HTTP request containing accommodation data
            pk: The primary key of the CEDARS specialist

        Returns:
            Response: The created accommodation or error message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccommodationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accommodation'
          description: ''
  /cedars-specialists/{id}/cancel_reservation/:
    get:
      operationId: cedars_specialists_cancel_reservation_retrieve
      description: |-
        Cancel a reservation as a CEDARS specialist.

        Args:
            request: The HTTP request containing reservation_id
            pk: The primary key of the CEDARS specialist

        Returns:
            Response: The cancelled reservation or error message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReservation'
          description: ''
    post:
      operationId: cedars_specialists_cancel_reservation_create
      description: |-
        Cancel a reservation as a CEDARS specialist.

        Args:
            request: The HTTP request containing reservation_id
            pk: The primary key of the CEDARS specialist

        Returns:
            Response: The cancelled reservation or error message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelReservationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelReservationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelReservationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReservation'
          description: ''
  /cedars-specialists/{id}/managed_accommodations/:
    get:
      operationId: cedars_specialists_managed_accommodations_retrieve
      description: |-
        Get all accommodations managed by a specific CEDARS specialist.

        Args:
            request: The HTTP request
            pk: The primary key of the CEDARS specialist

        Returns:
            Response: List of accommodations managed by the specialist
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CEDARSSpecialist'
          description: ''
  /cedars-specialists/{id}/update_accommodation/:
    get:
      operationId: cedars_specialists_update_accommodation_retrieve
      description: |-
        Update an existing accommodation managed by this specialist.

        Args:
            request: The HTTP request containing accommodation_id and updated data
            pk: The primary key of the CEDARS specialist

        Returns:
            Response: The updated accommodation or error message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccommodation'
          description: ''
    post:
      operationId: cedars_specialists_update_accommodation_create
      description: |-
        Update an existing accommodation managed by this specialist.

        Args:
            request: The HTTP request containing accommodation_id and updated data
            pk: The primary key of the CEDARS specialist

        Returns:
            Response: The updated accommodation or error message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cedars specialist.
        required: true
      tags:
      - cedars-specialists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccommodationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateAccommodationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateAccommodationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccommodation'
          description: ''
  /hku-members/:
    get:
      operationId: hku_members_list
      description: |-
        List HKU members.
        Only CEDARS specialists can list all HKU members.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - hku-members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHKUMemberList'
          description: ''
    post:
      operationId: hku_members_create
      description: |-
        Create a new HKU member.
        Only CEDARS specialists can create HKU members directly.
      tags:
      - hku-members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HKUMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HKUMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HKUMemberRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMember'
          description: ''
  /hku-members/{uid}/:
    get:
      operationId: hku_members_retrieve
      description: |-
        Retrieve an HKU member.
        HKU members can only retrieve their own profile.
        CEDARS specialists can retrieve any HKU member.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMember'
          description: ''
    put:
      operationId: hku_members_update
      description: |-
        Update an HKU member.
        HKU members can only update their own profile.
        CEDARS specialists can update any HKU member.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HKUMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HKUMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HKUMemberRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMember'
          description: ''
    patch:
      operationId: hku_members_partial_update
      description: |-
        ViewSet for managing HKU members.
        Provides CRUD operations for HKUMember model.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHKUMemberRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHKUMemberRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHKUMemberRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMember'
          description: ''
    delete:
      operationId: hku_members_destroy
      description: |-
        Delete an HKU member.
        Only CEDARS specialists can delete HKU members.
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /hku-members/{uid}/cancel_reservation/:
    get:
      operationId: hku_members_cancel_reservation_retrieve
      description: |-
        Cancel a reservation for a specific HKU member.

        Args:
            request: The HTTP request containing reservation_id
            pk: The primary key of the HKU member

        Returns:
            Response: The cancelled reservation or error message
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReservation'
          description: ''
    post:
      operationId: hku_members_cancel_reservation_create
      description: |-
        Cancel a reservation for a specific HKU member.

        Args:
            request: The HTTP request containing reservation_id
            pk: The primary key of the HKU member

        Returns:
            Response: The cancelled reservation or error message
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelReservationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelReservationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelReservationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReservation'
          description: ''
  /hku-members/{uid}/rate_accommodation/:
    get:
      operationId: hku_members_rate_accommodation_retrieve
      description: |-
        Rate an accommodation based on a reservation.

        Args:
            request: The HTTP request containing reservation_id, score, and optional comment
            pk: The primary key of the HKU member

        Returns:
            Response: The created rating or error message
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateAccommodation'
          description: ''
    post:
      operationId: hku_members_rate_accommodation_create
      description: |-
        Rate an accommodation based on a reservation.

        Args:
            request: The HTTP request containing reservation_id, score, and optional comment
            pk: The primary key of the HKU member

        Returns:
            Response: The created rating or error message
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateAccommodationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RateAccommodationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RateAccommodationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateAccommodation'
          description: ''
  /hku-members/{uid}/reservations/:
    get:
      operationId: hku_members_reservations_retrieve
      description: |-
        Get all reservations for a specific HKU member.

        Args:
            request: The HTTP request
            pk: The primary key of the HKU member

        Returns:
            Response: List of reservations for the member
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMember'
          description: ''
  /hku-members/{uid}/reserve_accommodation/:
    get:
      operationId: hku_members_reserve_accommodation_retrieve
      description: |-
        Reserve an accommodation for a specific HKU member.

        Args:
            request: The HTTP request containing accommodation_id, start_date, end_date
            pk: The primary key of the HKU member

        Returns:
            Response: The created reservation or error message
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReserveAccommodation'
          description: ''
    post:
      operationId: hku_members_reserve_accommodation_create
      description: |-
        Reserve an accommodation for a specific HKU member.

        Args:
            request: The HTTP request containing accommodation_id, start_date, end_date
            pk: The primary key of the HKU member

        Returns:
            Response: The created reservation or error message
      parameters:
      - in: path
        name: uid
        schema:
          type: string
        description: A unique value identifying this hku member.
        required: true
      tags:
      - hku-members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveAccommodationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReserveAccommodationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReserveAccommodationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReserveAccommodation'
          description: ''
  /property-owners/:
    get:
      operationId: property_owners_list
      description: |-
        ViewSet for managing property owners.
        Provides CRUD operations for PropertyOwner model.
      summary: List property owners
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'cedars_specialist' for this endpoint)
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - property-owners
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyOwnerList'
          description: ''
    post:
      operationId: property_owners_create
      description: |-
        Create a new property owner.
        Only CEDARS specialists can create property owners.
      summary: Create a new property owner
      parameters:
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'cedars_specialist' for this endpoint)
        required: true
      tags:
      - property-owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyOwnerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyOwnerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyOwnerRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyOwner'
          description: ''
  /property-owners/{id}/:
    get:
      operationId: property_owners_retrieve
      description: |-
        ViewSet for managing property owners.
        Provides CRUD operations for PropertyOwner model.
      summary: Retrieve a property owner
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property owner.
        required: true
      tags:
      - property-owners
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyOwner'
          description: ''
    put:
      operationId: property_owners_update
      description: |-
        Update a property owner.
        Only CEDARS specialists can update property owners.
      summary: Update a property owner
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property owner.
        required: true
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'cedars_specialist' for this endpoint)
        required: true
      tags:
      - property-owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyOwnerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PropertyOwnerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PropertyOwnerRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyOwner'
          description: ''
    patch:
      operationId: property_owners_partial_update
      description: |-
        ViewSet for managing property owners.
        Provides CRUD operations for PropertyOwner model.
      summary: Partially update a property owner
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property owner.
        required: true
      tags:
      - property-owners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPropertyOwnerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPropertyOwnerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPropertyOwnerRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyOwner'
          description: ''
    delete:
      operationId: property_owners_destroy
      description: |-
        Delete a property owner.
        Only CEDARS specialists can delete property owners.
      summary: Delete a property owner
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this property owner.
        required: true
      - in: query
        name: role
        schema:
          type: string
        description: User role (must be 'cedars_specialist' for this endpoint)
        required: true
      tags:
      - property-owners
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /ratings/:
    get:
      operationId: ratings_list
      description: |-
        List all ratings.
        Only HKU members and CEDARS specialists can list ratings.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ratings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRatingList'
          description: ''
    post:
      operationId: ratings_create
      description: |-
        Create a new rating.
        Only HKU members can create ratings for their own completed reservations.
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RatingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RatingRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
  /ratings/{id}/:
    get:
      operationId: ratings_retrieve
      description: |-
        Retrieve a specific rating.
        Only HKU members and CEDARS specialists can retrieve ratings.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - ratings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    put:
      operationId: ratings_update
      description: |-
        Update a rating.
        HKU members can only update their own ratings.
        CEDARS specialists can update any rating.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RatingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RatingRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    patch:
      operationId: ratings_partial_update
      description: |-
        ViewSet for managing ratings.
        Provides CRUD operations for Rating model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRatingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRatingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRatingRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    delete:
      operationId: ratings_destroy
      description: |-
        Delete a rating.
        HKU members can delete their own ratings.
        CEDARS specialists can delete any rating.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - ratings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /reservations/:
    get:
      operationId: reservations_list
      description: |-
        ViewSet for managing reservations.
        Provides CRUD operations for Reservation model.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - reservations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReservationList'
          description: ''
    post:
      operationId: reservations_create
      description: |-
        Create a new reservation.
        Only HKU members can create reservations, and they should use the reserve_accommodation endpoint.
        CEDARS specialists can create reservations on behalf of HKU members.
      tags:
      - reservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
  /reservations/{id}/:
    get:
      operationId: reservations_retrieve
      description: |-
        ViewSet for managing reservations.
        Provides CRUD operations for Reservation model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    put:
      operationId: reservations_update
      description: |-
        Update a reservation.
        Only CEDARS specialists can update reservations directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    patch:
      operationId: reservations_partial_update
      description: |-
        ViewSet for managing reservations.
        Provides CRUD operations for Reservation model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReservationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReservationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReservationRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    delete:
      operationId: reservations_destroy
      description: |-
        Delete a reservation.
        Only CEDARS specialists can delete reservations.
        HKU members should use the cancel_reservation endpoint.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /reservations/{id}/confirm/:
    get:
      operationId: reservations_confirm_retrieve
      description: |-
        Confirm a reservation, changing its status from 'pending' to 'confirmed'.

        Args:
            request: The HTTP request
            pk: The primary key of the reservation

        Returns:
            Response: The updated reservation or error message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: reservations_confirm_create
      description: |-
        Confirm a reservation, changing its status from 'pending' to 'confirmed'.

        Args:
            request: The HTTP request
            pk: The primary key of the reservation

        Returns:
            Response: The updated reservation or error message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - reservations
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Accommodation:
      type: object
      description: |-
        Serializer for the Accommodation model.

        Provides comprehensive serialization for accommodation listings with support for:
        - Creating/updating accommodations
        - Handling property owner relationships
        - Validating dates and numeric fields
        - Automatic geocoding of addresses

        Fields:
            id (int): Unique identifier (read-only)
            type (str): Type of accommodation
            address (str): Physical address
            latitude (float): Latitude coordinate (read-only, auto-populated)
            longitude (float): Longitude coordinate (read-only, auto-populated)
            geo_address (str): Geocoded address (read-only, auto-populated)
            available_from (date): Start date of availability
            available_until (date): End date of availability
            beds (int): Number of beds (min: 0)
            bedrooms (int): Number of bedrooms (min: 0)
            daily_price (Decimal): Price per day (min: 0.01)
            owner (PropertyOwnerSerializer): Nested serializer for owner details
            owner_id (int): ID for selecting existing owner (write-only)
            specialist (CEDARSSpecialistSerializer): Nested serializer for specialist details
            specialist_id (int): ID for selecting existing specialist (write-only)
            average_rating (float): Average rating based on associated ratings
      properties:
        id:
          type: integer
          readOnly: true
        type:
          enum:
          - apartment
          - house
          - villa
          - studio
          - hostel
          type: string
          description: |-
            * `apartment` - Apartment
            * `house` - House
            * `villa` - Villa
            * `studio` - Studio
            * `hostel` - Hostel
          x-spec-enum-id: 485b134c5c066a7a
        address:
          type: string
          maxLength: 255
        latitude:
          type: number
          format: double
          readOnly: true
        longitude:
          type: number
          format: double
          readOnly: true
        geo_address:
          type: string
          readOnly: true
        available_from:
          type: string
          format: date
        available_until:
          type: string
          format: date
        beds:
          type: integer
          minimum: 0
          title: Number of beds (must be 0 or greater)
        bedrooms:
          type: integer
          minimum: 0
          title: Number of bedrooms (must be 0 or greater)
        average_rating:
          type: number
          format: double
          readOnly: true
        daily_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Daily price (positive amount)
        owner:
          allOf:
          - $ref: '#/components/schemas/PropertyOwner'
          readOnly: true
        specialist:
          allOf:
          - $ref: '#/components/schemas/CEDARSSpecialist'
          readOnly: true
      required:
      - address
      - available_from
      - available_until
      - average_rating
      - bedrooms
      - beds
      - daily_price
      - geo_address
      - id
      - latitude
      - longitude
      - owner
      - specialist
      - type
    AccommodationRequest:
      type: object
      description: |-
        Serializer for the Accommodation model.

        Provides comprehensive serialization for accommodation listings with support for:
        - Creating/updating accommodations
        - Handling property owner relationships
        - Validating dates and numeric fields
        - Automatic geocoding of addresses

        Fields:
            id (int): Unique identifier (read-only)
            type (str): Type of accommodation
            address (str): Physical address
            latitude (float): Latitude coordinate (read-only, auto-populated)
            longitude (float): Longitude coordinate (read-only, auto-populated)
            geo_address (str): Geocoded address (read-only, auto-populated)
            available_from (date): Start date of availability
            available_until (date): End date of availability
            beds (int): Number of beds (min: 0)
            bedrooms (int): Number of bedrooms (min: 0)
            daily_price (Decimal): Price per day (min: 0.01)
            owner (PropertyOwnerSerializer): Nested serializer for owner details
            owner_id (int): ID for selecting existing owner (write-only)
            specialist (CEDARSSpecialistSerializer): Nested serializer for specialist details
            specialist_id (int): ID for selecting existing specialist (write-only)
            average_rating (float): Average rating based on associated ratings
      properties:
        type:
          enum:
          - apartment
          - house
          - villa
          - studio
          - hostel
          type: string
          description: |-
            * `apartment` - Apartment
            * `house` - House
            * `villa` - Villa
            * `studio` - Studio
            * `hostel` - Hostel
          x-spec-enum-id: 485b134c5c066a7a
        address:
          type: string
          minLength: 1
          maxLength: 255
        available_from:
          type: string
          format: date
        available_until:
          type: string
          format: date
        beds:
          type: integer
          minimum: 0
          title: Number of beds (must be 0 or greater)
        bedrooms:
          type: integer
          minimum: 0
          title: Number of bedrooms (must be 0 or greater)
        daily_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Daily price (positive amount)
        owner_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Select existing owner (leave blank for new owner)
        owner_name:
          type: string
          writeOnly: true
          minLength: 1
          title: New owner name (only if creating new owner)
        owner_phone:
          type: string
          writeOnly: true
          minLength: 1
          title: New owner phone number (only if creating new owner)
        specialist_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Select managing specialist
      required:
      - address
      - available_from
      - available_until
      - bedrooms
      - beds
      - daily_price
      - type
    CEDARSSpecialist:
      type: object
      description: |-
        Serializer for the CEDARSSpecialist model.

        Handles serialization and deserialization of CEDARS specialist objects.

        Fields:
            id (int): Unique identifier
            name (str): Name of the CEDARS specialist
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    CEDARSSpecialistRequest:
      type: object
      description: |-
        Serializer for the CEDARSSpecialist model.

        Handles serialization and deserialization of CEDARS specialist objects.

        Fields:
            id (int): Unique identifier
            name (str): Name of the CEDARS specialist
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - name
    CancelReservation:
      type: object
      description: |-
        Serializer for cancelling a reservation.

        Fields:
            reservation_id (int): ID of the reservation to cancel
      properties:
        reservation_id:
          type: integer
      required:
      - reservation_id
    CancelReservationRequest:
      type: object
      description: |-
        Serializer for cancelling a reservation.

        Fields:
            reservation_id (int): ID of the reservation to cancel
      properties:
        reservation_id:
          type: integer
      required:
      - reservation_id
    HKUMember:
      type: object
      description: |-
        Serializer for the HKUMember model.

        Handles serialization and deserialization of HKU member objects.

        Fields:
            uid (str): Unique identifier (primary key)
            name (str): Name of the HKU member
      properties:
        uid:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
      required:
      - name
      - uid
    HKUMemberRequest:
      type: object
      description: |-
        Serializer for the HKUMember model.

        Handles serialization and deserialization of HKU member objects.

        Fields:
            uid (str): Unique identifier (primary key)
            name (str): Name of the HKU member
      properties:
        uid:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - name
      - uid
    PaginatedAccommodationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Accommodation'
    PaginatedCEDARSSpecialistList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CEDARSSpecialist'
    PaginatedHKUMemberList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HKUMember'
    PaginatedPropertyOwnerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PropertyOwner'
    PaginatedRatingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Rating'
    PaginatedReservationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
    PatchedAccommodationRequest:
      type: object
      description: |-
        Serializer for the Accommodation model.

        Provides comprehensive serialization for accommodation listings with support for:
        - Creating/updating accommodations
        - Handling property owner relationships
        - Validating dates and numeric fields
        - Automatic geocoding of addresses

        Fields:
            id (int): Unique identifier (read-only)
            type (str): Type of accommodation
            address (str): Physical address
            latitude (float): Latitude coordinate (read-only, auto-populated)
            longitude (float): Longitude coordinate (read-only, auto-populated)
            geo_address (str): Geocoded address (read-only, auto-populated)
            available_from (date): Start date of availability
            available_until (date): End date of availability
            beds (int): Number of beds (min: 0)
            bedrooms (int): Number of bedrooms (min: 0)
            daily_price (Decimal): Price per day (min: 0.01)
            owner (PropertyOwnerSerializer): Nested serializer for owner details
            owner_id (int): ID for selecting existing owner (write-only)
            specialist (CEDARSSpecialistSerializer): Nested serializer for specialist details
            specialist_id (int): ID for selecting existing specialist (write-only)
            average_rating (float): Average rating based on associated ratings
      properties:
        type:
          enum:
          - apartment
          - house
          - villa
          - studio
          - hostel
          type: string
          description: |-
            * `apartment` - Apartment
            * `house` - House
            * `villa` - Villa
            * `studio` - Studio
            * `hostel` - Hostel
          x-spec-enum-id: 485b134c5c066a7a
        address:
          type: string
          minLength: 1
          maxLength: 255
        available_from:
          type: string
          format: date
        available_until:
          type: string
          format: date
        beds:
          type: integer
          minimum: 0
          title: Number of beds (must be 0 or greater)
        bedrooms:
          type: integer
          minimum: 0
          title: Number of bedrooms (must be 0 or greater)
        daily_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Daily price (positive amount)
        owner_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Select existing owner (leave blank for new owner)
        owner_name:
          type: string
          writeOnly: true
          minLength: 1
          title: New owner name (only if creating new owner)
        owner_phone:
          type: string
          writeOnly: true
          minLength: 1
          title: New owner phone number (only if creating new owner)
        specialist_id:
          type: integer
          writeOnly: true
          nullable: true
          title: Select managing specialist
    PatchedCEDARSSpecialistRequest:
      type: object
      description: |-
        Serializer for the CEDARSSpecialist model.

        Handles serialization and deserialization of CEDARS specialist objects.

        Fields:
            id (int): Unique identifier
            name (str): Name of the CEDARS specialist
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
    PatchedHKUMemberRequest:
      type: object
      description: |-
        Serializer for the HKUMember model.

        Handles serialization and deserialization of HKU member objects.

        Fields:
            uid (str): Unique identifier (primary key)
            name (str): Name of the HKU member
      properties:
        uid:
          type: string
          minLength: 1
          maxLength: 255
        name:
          type: string
          minLength: 1
          maxLength: 255
    PatchedPropertyOwnerRequest:
      type: object
      description: |-
        Serializer for the PropertyOwner model.

        Handles serialization and deserialization of PropertyOwner objects.

        Fields:
            id (int): Unique identifier
            name (str): Name of the property owner
            phone_no (str): Phone number of the property owner
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        phone_no:
          type: string
          minLength: 1
          maxLength: 255
    PatchedRatingRequest:
      type: object
      description: |-
        Serializer for the Rating model.

        Handles serialization and deserialization of Rating objects.

        Fields:
            id (int): Unique identifier
            score (int): Rating score (0-5)
            date_rated (date): Date when the rating was submitted
            comment (str): Optional comment for the rating
            reservation (int): ID of the associated reservation
      properties:
        score:
          type: integer
          maximum: 5
          minimum: 0
        comment:
          type: string
          nullable: true
        reservation:
          type: integer
    PatchedReservationRequest:
      type: object
      description: |-
        Serializer for the Reservation model.

        Handles serialization and deserialization of Reservation objects.

        Fields:
            id (int): Unique identifier
            status (str): Status of the reservation
            start_date (date): Start date of the reservation
            end_date (date): End date of the reservation
            cancelled_by (str): Who cancelled the reservation (if applicable)
            member (HKUMemberSerializer): The HKU member making the reservation
            accommodation (AccommodationSerializer): The accommodation being reserved
            rating (RatingSerializer): Associated rating (if any)
      properties:
        status:
          enum:
          - pending
          - confirmed
          - cancelled
          - completed
          type: string
          description: |-
            * `pending` - Pending
            * `confirmed` - Confirmed
            * `cancelled` - Cancelled
            * `completed` - Completed
          x-spec-enum-id: ef0e3523b506c807
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        member_id:
          type: string
          minLength: 1
          writeOnly: true
        accommodation:
          type: integer
    PropertyOwner:
      type: object
      description: |-
        Serializer for the PropertyOwner model.

        Handles serialization and deserialization of PropertyOwner objects.

        Fields:
            id (int): Unique identifier
            name (str): Name of the property owner
            phone_no (str): Phone number of the property owner
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        phone_no:
          type: string
          maxLength: 255
      required:
      - id
      - name
      - phone_no
    PropertyOwnerRequest:
      type: object
      description: |-
        Serializer for the PropertyOwner model.

        Handles serialization and deserialization of PropertyOwner objects.

        Fields:
            id (int): Unique identifier
            name (str): Name of the property owner
            phone_no (str): Phone number of the property owner
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        phone_no:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - name
      - phone_no
    RateAccommodation:
      type: object
      description: |-
        Serializer for rating an accommodation.

        Fields:
            reservation_id (int): ID of the completed reservation
            score (int): Rating score, 0-5
            comment (str): Optional comment about the stay
      properties:
        reservation_id:
          type: integer
        score:
          type: integer
          maximum: 5
          minimum: 0
        comment:
          type: string
      required:
      - reservation_id
      - score
    RateAccommodationRequest:
      type: object
      description: |-
        Serializer for rating an accommodation.

        Fields:
            reservation_id (int): ID of the completed reservation
            score (int): Rating score, 0-5
            comment (str): Optional comment about the stay
      properties:
        reservation_id:
          type: integer
        score:
          type: integer
          maximum: 5
          minimum: 0
        comment:
          type: string
      required:
      - reservation_id
      - score
    Rating:
      type: object
      description: |-
        Serializer for the Rating model.

        Handles serialization and deserialization of Rating objects.

        Fields:
            id (int): Unique identifier
            score (int): Rating score (0-5)
            date_rated (date): Date when the rating was submitted
            comment (str): Optional comment for the rating
            reservation (int): ID of the associated reservation
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: integer
          maximum: 5
          minimum: 0
        date_rated:
          type: string
          format: date
          readOnly: true
        comment:
          type: string
          nullable: true
        reservation:
          type: integer
      required:
      - date_rated
      - id
      - reservation
      - score
    RatingRequest:
      type: object
      description: |-
        Serializer for the Rating model.

        Handles serialization and deserialization of Rating objects.

        Fields:
            id (int): Unique identifier
            score (int): Rating score (0-5)
            date_rated (date): Date when the rating was submitted
            comment (str): Optional comment for the rating
            reservation (int): ID of the associated reservation
      properties:
        score:
          type: integer
          maximum: 5
          minimum: 0
        comment:
          type: string
          nullable: true
        reservation:
          type: integer
      required:
      - reservation
      - score
    Reservation:
      type: object
      description: |-
        Serializer for the Reservation model.

        Handles serialization and deserialization of Reservation objects.

        Fields:
            id (int): Unique identifier
            status (str): Status of the reservation
            start_date (date): Start date of the reservation
            end_date (date): End date of the reservation
            cancelled_by (str): Who cancelled the reservation (if applicable)
            member (HKUMemberSerializer): The HKU member making the reservation
            accommodation (AccommodationSerializer): The accommodation being reserved
            rating (RatingSerializer): Associated rating (if any)
      properties:
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - pending
          - confirmed
          - cancelled
          - completed
          type: string
          description: |-
            * `pending` - Pending
            * `confirmed` - Confirmed
            * `cancelled` - Cancelled
            * `completed` - Completed
          x-spec-enum-id: ef0e3523b506c807
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        cancelled_by:
          type: string
          readOnly: true
          nullable: true
        member:
          allOf:
          - $ref: '#/components/schemas/HKUMember'
          readOnly: true
        accommodation:
          type: integer
        rating:
          allOf:
          - $ref: '#/components/schemas/Rating'
          readOnly: true
      required:
      - accommodation
      - cancelled_by
      - end_date
      - id
      - member
      - rating
      - start_date
    ReservationRequest:
      type: object
      description: |-
        Serializer for the Reservation model.

        Handles serialization and deserialization of Reservation objects.

        Fields:
            id (int): Unique identifier
            status (str): Status of the reservation
            start_date (date): Start date of the reservation
            end_date (date): End date of the reservation
            cancelled_by (str): Who cancelled the reservation (if applicable)
            member (HKUMemberSerializer): The HKU member making the reservation
            accommodation (AccommodationSerializer): The accommodation being reserved
            rating (RatingSerializer): Associated rating (if any)
      properties:
        status:
          enum:
          - pending
          - confirmed
          - cancelled
          - completed
          type: string
          description: |-
            * `pending` - Pending
            * `confirmed` - Confirmed
            * `cancelled` - Cancelled
            * `completed` - Completed
          x-spec-enum-id: ef0e3523b506c807
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        member_id:
          type: string
          minLength: 1
          writeOnly: true
        accommodation:
          type: integer
      required:
      - accommodation
      - end_date
      - member_id
      - start_date
    ReserveAccommodation:
      type: object
      description: |-
        Serializer for reserving an accommodation.

        Fields:
            accommodation_id (int): ID of the accommodation to reserve
            start_date (date): Start date of the reservation (YYYY-MM-DD)
            end_date (date): End date of the reservation (YYYY-MM-DD)
            member_name (str): Name of the HKU member (only required for first-time users)
      properties:
        accommodation_id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        member_name:
          type: string
      required:
      - accommodation_id
      - end_date
      - start_date
    ReserveAccommodationRequest:
      type: object
      description: |-
        Serializer for reserving an accommodation.

        Fields:
            accommodation_id (int): ID of the accommodation to reserve
            start_date (date): Start date of the reservation (YYYY-MM-DD)
            end_date (date): End date of the reservation (YYYY-MM-DD)
            member_name (str): Name of the HKU member (only required for first-time users)
      properties:
        accommodation_id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        member_name:
          type: string
          minLength: 1
      required:
      - accommodation_id
      - end_date
      - start_date
    UpdateAccommodation:
      type: object
      description: |-
        Serializer for updating an accommodation by a CEDARS specialist.

        Fields:
            accommodation_id (int): ID of the accommodation to update
            type (str): Type of accommodation (optional)
            address (str): Physical address (optional)
            available_from (date): Start date of availability (optional)
            available_until (date): End date of availability (optional)
            beds (int): Number of beds (optional)
            bedrooms (int): Number of bedrooms (optional)
            daily_price (decimal): Price per day (optional)
      properties:
        accommodation_id:
          type: integer
        type:
          enum:
          - apartment
          - house
          - villa
          - studio
          - hostel
          type: string
          description: |-
            * `apartment` - apartment
            * `house` - house
            * `villa` - villa
            * `studio` - studio
            * `hostel` - hostel
          x-spec-enum-id: de8fab4b0eb93e83
        address:
          type: string
        available_from:
          type: string
          format: date
        available_until:
          type: string
          format: date
        beds:
          type: integer
          minimum: 0
        bedrooms:
          type: integer
          minimum: 0
        daily_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - accommodation_id
    UpdateAccommodationRequest:
      type: object
      description: |-
        Serializer for updating an accommodation by a CEDARS specialist.

        Fields:
            accommodation_id (int): ID of the accommodation to update
            type (str): Type of accommodation (optional)
            address (str): Physical address (optional)
            available_from (date): Start date of availability (optional)
            available_until (date): End date of availability (optional)
            beds (int): Number of beds (optional)
            bedrooms (int): Number of bedrooms (optional)
            daily_price (decimal): Price per day (optional)
      properties:
        accommodation_id:
          type: integer
        type:
          enum:
          - apartment
          - house
          - villa
          - studio
          - hostel
          type: string
          description: |-
            * `apartment` - apartment
            * `house` - house
            * `villa` - villa
            * `studio` - studio
            * `hostel` - hostel
          x-spec-enum-id: de8fab4b0eb93e83
        address:
          type: string
          minLength: 1
        available_from:
          type: string
          format: date
        available_until:
          type: string
          format: date
        beds:
          type: integer
          minimum: 0
        bedrooms:
          type: integer
          minimum: 0
        daily_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - accommodation_id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
tags:
- name: accommodations
  description: Operations related to student accommodations
- name: cedars-specialists
  description: Operations related to CEDARS specialists
- name: hku-members
  description: Operations related to HKU members
- name: property-owners
  description: Operations related to managing property owners
- name: ratings
  description: Operations for managing ratings associated with accommodations
- name: reservations
  description: Operations for managing reservations
